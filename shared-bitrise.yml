---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
workflows:

  primary:
    before_run:
    - _setup
    after_run:
    - _sonarqube
    - _report
    steps:
    - fastlane@3:
        inputs:
        - update_fastlane: 'false'
        - lane: ci
        title: Build & Test

  deploy:
    before_run:
    - _setup
    after_run:
    - _deploy_docs_worker    
    steps:
    - script@1:
        title: Lint and push Cocoapods trunk
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            bundle exec pod spec lint --allow-warnings
            bundle exec pod trunk push --allow-warnings --verbose

  deploy_docs:
    before_run:
    - _setup
    - _deploy_docs_worker

  _deploy_docs_worker:
    steps:
    - brew-install@0:
        title: Install svn
        inputs:
        - cache_enabled: 'yes'
        - upgrade: 'no'
        - packages: svn
    - fastlane@2:
        title: Generate and deploy Docs to Github Pages
        inputs:
        - update_fastlane: 'false'
        - lane: deploy_ghpages ghpages_url:$GIT_REPOSITORY_URL github_token:$PUBLISHER_GITHUB_API_TOKEN

  integration_tests:
    before_run:
    - _setup
    steps:
    - xcode-test@2:
        inputs:
        - simulator_device: iPhone 8
        - scheme: IntegrationTests
        - should_build_before_test: 'no'
    - cache-push@2:
        inputs:
        - cache_paths: |-
            $BITRISE_CACHE_DIR
            $GEM_CACHE_PATH
    - slack@3:
        inputs:
        - channel: ''
        - webhook_url: "$SLACK_CHANNEL_WEBHOOK"
        - text: ''
        - title: ''
        - author_name: ''
        - channel_on_error: ''
        - pretext: ''
        - pretext_on_error: ''
        - message_on_error: |+
            $BITRISE_APP_TITLE » $BITRISE_TRIGGERED_WORKFLOW_TITLE - #$BITRISE_BUILD_NUMBER *Failure*
            <$BITRISE_BUILD_URL|Open>
        - message: |+
            $BITRISE_APP_TITLE » $BITRISE_TRIGGERED_WORKFLOW_TITLE - #$BITRISE_BUILD_NUMBER *Success*
            <$BITRISE_BUILD_URL|Open>
        - fields: ''
        - buttons: ''
        - footer: ''
        - footer_icon: ''
        - timestamp: 'no'
        - icon_url_on_error: ''
        - from_username_on_error: ''
        - color_on_error: "#d10b20"
        
  _setup:
    steps:
    - git-clone@4:
        inputs:
        - update_submodules: 'no'
    - cache-pull@2: {}
    - script@1:
        title: Bundle install
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            if [ ! -f "Gemfile" ]; then
                echo "No Gemfile detected. Skipping..."
                exit 0
            fi
            bundle install
            RBENV_DIR="`cd $(rbenv which ruby)/../..;pwd`"
            echo "Gem cache directory: $RBENV_DIR"
            envman add --key GEM_CACHE_PATH --value $RBENV_DIR
    - brew-install@0:
        title: Install swiftlint
        inputs:
        - cache_enabled: 'yes'
        - upgrade: 'no'
        - packages: swiftlint
    - cocoapods-install@1:
        inputs:
        - verbose: 'false'

  _sonarqube:
    steps:
    - script@1:
        title: Setup env vars
        inputs:
        - content: |
            #!/usr/bin/env bash

            if [[ $BITRISE_GIT_BRANCH == release* ]]; then
                envman add --key IS_RELEASE_BRANCH --value "true"
            else
                envman add --key IS_RELEASE_BRANCH --value "false"
            fi
    - sonarqube-scanner@1:
        run_if: '{{getenv "SONAR_API_TOKEN" | ne "" | and (enveq "BITRISE_GIT_BRANCH" "master" | or (enveq "IS_RELEASE_BRANCH" "true") )}}'
        inputs:
        - scanner_properties: |-
            sonar.host.url=$SONAR_HOST_URL
            sonar.login=$SONAR_API_TOKEN
            sonar.c.file.suffixes=-
            sonar.cpp.file.suffixes=-
            sonar.objc.file.suffixes=-

  _report:
    steps:
    - danger@2:
        inputs:
        - github_api_token: "$DANGER_GITHUB_API_TOKEN"
    - cache-push@2:
        inputs:
        - cache_paths: |-
            $BITRISE_CACHE_DIR
            $GEM_CACHE_PATH
